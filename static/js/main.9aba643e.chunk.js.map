{"version":3,"sources":["Features/Clients/context/ClientContext.tsx","UI/atoms/Card.tsx","UI/atoms/ResponsiveBox.tsx","hooks/window-size.hookt.tsx","UI/atoms/Icon.tsx","UI/atoms/Text.tsx","UI/atoms/Forms/input.style.ts","UI/atoms/Forms/Input.tsx","UI/molecules/DynamicForm.tsx","UI/atoms/Button.tsx","UI/atoms/Forms/validators.ts","UI/organism/NewClientForm.tsx","Features/Clients/Pages/ClientForm.tsx","API/clients.http.tsx","Features/Clients/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["initialClientsState","submitNewClient","newClient","Error","ClientsContext","React","createContext","ClientsContextProvider","children","initialState","Provider","value","Card","style","backgroundColor","padding","borderRadius","boxShadow","ResponsiveBox","mobile","desktop","sizes","width","isSSR","window","useState","innerWidth","height","innerHeight","windowSize","setWindowSize","changeWindowSize","useEffect","addEventListener","removeEventListener","useWindowSize","desktopSize","iconsStyle","fontSize","color","marginRight","Icon","name","iconSize","src","process","variantStyles","fontWeight","textAlign","fontStyle","Text","variant","mergedStyles","inputStyle","display","background","border","outline","inputContainerStyle","paddingLeft","position","alignItems","labelStyle","pointerEvents","transition","floatingLabel","top","left","paddingRight","Input","initialValue","type","placeholder","onValueChange","validator","hint","setValue","hasFocus","setFocus","hasError","setHasError","errMsg","setErrorMsg","inputRef","useRef","document","current","contains","activeElement","marginBottom","ref","onFocus","onBlur","onChange","ev","target","valid","message","console","log","DynamicForm","fields","actionsTemplate","map","objKey","config","newValue","marginTop","buttonStyle","justifyContent","cursor","Button","label","onClick","Validators","Required","msg","trim","newClientFields","NewClientForm","submitHandler","flexDirection","values","MESSAGES","ErrorMessagePage","err","onGoBack","data","field","SuccessMessagePage","ClientFormPage","useContext","setError","isSuccess","setSuccess","then","error","catch","warn","createClient","a","fetch","configuration","apiURL","method","body","JSON","stringify","raw","status","json","code","Clients","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9aba643e.chunk.js","sourcesContent":["import {NewClient} from \"./models\";\r\nimport {Result} from \"../../../Common/types\";\r\nimport React from \"react\";\r\n\r\nexport interface ClientContextActions {\r\n    submitNewClient: (newClient: NewClient) => Promise<Result<string>>;\r\n}\r\n\r\nexport interface ClientContextData {\r\n}\r\n\r\nexport interface ClientsContextState extends ClientContextActions {\r\n}\r\n\r\nexport const initialClientsState: ClientsContextState = {\r\n    submitNewClient: (newClient) => {\r\n        throw new Error(\"metodo sin implmentar\")\r\n    },\r\n};\r\n\r\nexport const ClientsContext = React.createContext<ClientsContextState>(initialClientsState);\r\n\r\nexport interface ClientContextProviderProps {\r\n    children?: React.ReactNode,\r\n    initialState?: ClientsContextState\r\n}\r\n\r\nexport const ClientsContextProvider: React.FC<ClientContextProviderProps> =\r\n    ({\r\n         children,\r\n         initialState = initialClientsState\r\n     }) => {\r\n\r\n        return (\r\n            <ClientsContext.Provider\r\n                value={initialState}\r\n            >\r\n                {children}\r\n            </ClientsContext.Provider>\r\n        );\r\n    };\r\n","import React from \"react\";\r\n\r\n\r\nexport interface CardProps {\r\n    style?: any;\r\n}\r\n\r\nexport const Card: React.FC<CardProps> = ({children,style}) => {\r\n    return (\r\n        <div style={{backgroundColor:\"#113d5e\", padding: 10, borderRadius: 1, boxShadow: '0px 2px 6px #00000029',...style}}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n","import {useWindowSize} from \"../../hooks/window-size.hookt\";\r\nimport React from \"react\";\r\n\r\nexport interface ResponsiveBoxProps {\r\n    sizes: {\r\n        desktopSize: number\r\n        mobileSize?: number;\r\n    }\r\n\r\n\r\n    mobile: React.ReactNode,\r\n    desktop: React.ReactNode,\r\n\r\n}\r\n\r\nexport const ResponsiveBox: React.FC<ResponsiveBoxProps> = ({children, mobile,desktop, sizes}) => {\r\n    const {width} = useWindowSize();\r\n    const {desktopSize} = sizes;\r\n    return (\r\n        <>\r\n            {width < desktopSize && mobile}\r\n            {width >= desktopSize && desktop}\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport function useWindowSize() {\r\n    const isSSR = typeof window === \"undefined\";\r\n\r\n    const [windowSize, setWindowSize] = React.useState({\r\n        width: !isSSR ? window.innerWidth : 1200,\r\n        height: !isSSR ? window.innerHeight : 800,\r\n    });\r\n\r\n    function changeWindowSize() {\r\n        setWindowSize({width: window.innerWidth, height: window.innerHeight});\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        window.addEventListener(\"resize\", changeWindowSize);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"resize\", changeWindowSize);\r\n        };\r\n    }, []);\r\n\r\n    return windowSize;\r\n}\r\n","import React from \"react\";\r\nimport {FaInstagram, FaWhatsapp} from \"react-icons/all\";\r\n\r\nexport interface IconProps {\r\n    name: 'brand' | 'instagram' | 'whatsapp'\r\n    iconSize?: 'large' | 'small' | 'medium'\r\n}\r\n\r\nconst iconsStyle = {\r\n    'large': {fontSize: 35, color: 'white', marginRight: 10},\r\n    'small': {fontSize: 35, color: 'white', marginRight: 10},\r\n    'medium': {fontSize: 35, color: 'white', marginRight: 10},\r\n}\r\n\r\nexport const Icon: React.FC<IconProps> =\r\n    ({\r\n         name,\r\n         iconSize = \"medium\"\r\n     }) => {\r\n        switch (name) {\r\n            case \"brand\":\r\n                return <img height={150} src={process.env.PUBLIC_URL + '/rigolo-icon.png'}/>\r\n            case 'instagram':\r\n                return <FaInstagram style={iconsStyle[iconSize]}/>\r\n            case 'whatsapp':\r\n                return <FaWhatsapp style={iconsStyle[iconSize]}/>\r\n        }\r\n    }\r\n","import React from \"react\";\r\n\r\n\r\nexport interface TextProps {\r\n    variant: 'paragraph' | 'title' | 'hint',\r\n\r\n}\r\n\r\nconst variantStyles: any = {\r\n    'paragraph': {fontSize: 16},\r\n    'title': {fontSize: 25, fontWeight: 'bold', textAlign: 'center'},\r\n    'hint': {fontSize: 14, fontWeight: 'bold', fontStyle: 'italic'},\r\n}\r\n\r\n\r\nexport const Text: React.FC<TextProps> = ({variant, children}) => {\r\n\r\n    const mergedStyles = {color: \"white\", ...variantStyles[variant]}\r\n    return (\r\n        <span style={mergedStyles}>{children}</span>\r\n    )\r\n\r\n}\r\n","\r\nexport const inputStyle = {\r\n    fontSize: '14px',\r\n    display: 'block',\r\n    background: 'none',\r\n    width: '100%',\r\n    border: 'none',\r\n    height: '26px',\r\n    outline: 'none',\r\n    color: 'white'\r\n\r\n}\r\nexport const inputContainerStyle: any = {\r\n\r\n    paddingLeft: 7,\r\n    width: '100%',\r\n    position: 'relative',\r\n    display: 'flex',\r\n    height: '35px',\r\n    alignItems: 'center',\r\n    border: '1px solid rgba(255, 255, 255, .41)',\r\n    backgroundColor: 'none',\r\n    borderRadius: '4px',\r\n}\r\n\r\nexport const labelStyle: any = {\r\n    color: 'white',\r\n    fontSize: 13,\r\n    fontWeight: 'bold',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    transition: '0.3s ease all',\r\n}\r\n\r\nexport const floatingLabel: any = {\r\n    transition: '0.3s ease all',\r\n    position: 'absolute',\r\n    fontSize: 9,\r\n    fontWeight: 'bold',\r\n    top: -6,\r\n    color: 'white',\r\n    left: 10,\r\n    background: 'none',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport {Text} from \"../Text\";\r\nimport {floatingLabel, inputContainerStyle, inputStyle, labelStyle} from \"./input.style\";\r\n\r\nexport type FieldValidatorFunc = (value: string, type: string) => { valid: boolean, message: string };\r\n\r\nexport type InputType = 'text';\r\n\r\nexport interface InputProps {\r\n    type?: InputType;\r\n    placeholder?: string;\r\n    initialValue?: any;\r\n    onValueChange?: (value: any) => void\r\n    hint?: string,\r\n    validator?: FieldValidatorFunc\r\n}\r\n\r\nexport const Input: React.FC<InputProps> =\r\n    ({\r\n         initialValue,\r\n         type = 'text',\r\n         placeholder,\r\n         onValueChange,\r\n         hint,\r\n         validator\r\n     }) => {\r\n        const [value, setValue] = React.useState<any>(initialValue || \"\");\r\n        const [hasFocus, setFocus] = React.useState(false);\r\n        const [hasError, setHasError] = React.useState(false);\r\n        const [errMsg, setErrorMsg] = React.useState(\"\");\r\n        const inputRef = React.useRef<HTMLInputElement>(null);\r\n\r\n        const handleInputChange = (ev: any) => {\r\n            setValue(ev.target.value);\r\n            if (validator) {\r\n                const {valid, message} = validator(ev.target.value, type)\r\n                console.log(valid)\r\n                setHasError(true);\r\n                setErrorMsg(message)\r\n            }\r\n            if (onValueChange) {\r\n                onValueChange(ev.target.value);\r\n            }\r\n        }\r\n\r\n        useEffect(() => {\r\n            if (document.hasFocus() && inputRef?.current?.contains(document.activeElement)) {\r\n                setFocus(true);\r\n            }\r\n        }, []);\r\n\r\n        return (\r\n            <div style={{width: '100%', marginBottom: 5, height: 58}}>\r\n                <div style={inputContainerStyle}>\r\n                    <input ref={inputRef}\r\n                           onFocus={() => setFocus(true)}\r\n                           onBlur={() => setFocus(false)}\r\n                           style={inputStyle}\r\n                           onChange={handleInputChange}\r\n                           value={value}\r\n                           type={type}/>\r\n                    <label style={(!(value)) && !hasFocus ? labelStyle : floatingLabel}>{placeholder}</label>\r\n                </div>\r\n                {hasError ? <Text variant={\"hint\"}>{errMsg || \"\"}</Text> : null}\r\n            </div>\r\n        )\r\n\r\n    }\r\n","import React, {useState} from \"react\";\r\nimport {Input, InputProps} from \"../atoms/Forms/Input\";\r\n\r\n\r\ntype RenderInputFunc = (config: { objKey: string, config: InputProps }) => React.ReactNode;\r\n\r\nexport interface DynamicFormProps {\r\n    fields: { objKey: string, config: InputProps}[]\r\n    initialValue?: any\r\n    actionsTemplate?: (values: any) => React.ReactNode\r\n}\r\n\r\nexport const DynamicForm: React.FC<DynamicFormProps> = (\r\n    {\r\n        fields,\r\n        initialValue,\r\n        actionsTemplate\r\n    }) => {\r\n\r\n    const [value, setValue] = useState<any>(initialValue || {});\r\n\r\n\r\n    const renderField: RenderInputFunc = ({objKey, config}) => {\r\n        return (\r\n            <Input\r\n                key={objKey}\r\n                onValueChange={(newValue) => {\r\n                    value[objKey] = newValue\r\n                    console.log(newValue)\r\n                    setValue({...value});\r\n                }}\r\n                {...config}\r\n\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {fields.map(renderField)}\r\n            <div style={{width:'100%', marginTop: '26vh'}}>\r\n                {actionsTemplate ? actionsTemplate(value) : null}\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nconst buttonStyle: any = {\r\n    padding: '0px 15px 0px 15px',\r\n    height: 32,\r\n    width: '100%',\r\n    border: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    fontWeight: 'inherit',\r\n    fontSize: 'inherit',\r\n    justifyContent: 'center',\r\n    cursor: 'pointer',\r\n    background: '#fbaa2c',\r\n    color: 'white',\r\n}\r\n\r\nexport interface ButtonProps {\r\n    label: string\r\n    onClick?: () => void\r\n    style?: any\r\n}\r\n\r\nexport const Button: React.FC<ButtonProps> = ({label, style, onClick}) => {\r\n    const handleClick = () => {\r\n        if (onClick) {\r\n            onClick();\r\n        }\r\n    }\r\n    const mergedStyles = {...buttonStyle, ...style}\r\n    return (\r\n        <button style={mergedStyles} onClick={handleClick}>{label}</button>\r\n    )\r\n}\r\n","import {FieldValidatorFunc} from \"./Input\";\r\n\r\nexport const Validators: any = {\r\n    Required: (value: string, msg: string): { valid: boolean, message: string } => {\r\n        if (value.trim() === \"\") {\r\n            return {message: \"Campo requerido\", valid: false}\r\n        }\r\n        return {message: \"\", valid: true}\r\n    }\r\n\r\n}\r\n","import React from \"react\";\r\nimport {Icon} from \"../atoms/Icon\";\r\nimport {DynamicForm} from \"../molecules/DynamicForm\";\r\nimport {Button} from \"../atoms/Button\";\r\nimport {InputProps} from \"../atoms/Forms/Input\";\r\nimport {NewClient} from \"../../Features/Clients/context/models\";\r\nimport {Validators} from \"../atoms/Forms/validators\";\r\n\r\n\r\nconst newClientFields: { objKey: string, config: InputProps }[] = [\r\n    {\r\n        objKey: 'name', config: {placeholder: 'Nombre', validator: Validators.Required}\r\n    },\r\n    {objKey: 'phone', config: {placeholder: 'Telefono', validator: Validators.Required}},\r\n    {objKey: 'region', config: {placeholder: 'Region'}},\r\n    {objKey: 'email', config: {placeholder: 'Email', validator: Validators.Required}},\r\n]\r\n\r\nexport interface NewClientFormProps {\r\n    submitHandler: (newClientData: NewClient) => void\r\n}\r\n\r\nexport const NewClientForm: React.FC<NewClientFormProps> = ({submitHandler}) => {\r\n    return (<div style={{\r\n        display: 'flex', flexDirection: 'column', alignItems: 'center', height: '100%'\r\n    }}>\r\n        <Icon name={'brand'}/>\r\n        <div style={{height: 30}}></div>\r\n        <DynamicForm\r\n            fields={newClientFields}\r\n            actionsTemplate={(values: any) => {\r\n                return (\r\n                    <Button onClick={\r\n                        () => {\r\n                            submitHandler(values as NewClient);\r\n                        }\r\n                    } label={'Enviar'}/>\r\n                )\r\n            }}\r\n        />\r\n\r\n    </div>)\r\n}\r\n","import React from \"react\";\r\n\r\nimport {ClientsContext} from \"../context/ClientContext\";\r\nimport {Card} from \"../../../UI/atoms/Card\";\r\nimport {ResponsiveBox} from \"../../../UI/atoms/ResponsiveBox\";\r\nimport {NewClientForm} from \"../../../UI/organism/NewClientForm\";\r\nimport {NewClient} from \"../context/models\";\r\nimport {Text} from \"../../../UI/atoms/Text\";\r\nimport {Button} from \"../../../UI/atoms/Button\";\r\nimport {APIError} from \"../../../Common/types\";\r\n\r\nconst MESSAGES: { [p: string]: string } = {\r\n    'name': 'El nombre es requerido para el registro',\r\n    'email': 'El email es requerido para el registro',\r\n    'phone': 'El numero de telefono  es requerido para el registro'\r\n}\r\nexport const ErrorMessagePage: React.FC<{ err: APIError, onGoBack: () => void }> = ({err, onGoBack}) => {\r\n    return (\r\n        <div style={{\r\n            display: \"flex\",\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            flexDirection: 'column',\r\n            height: '100%'\r\n        }}>\r\n            <Text variant={\"title\"}> {MESSAGES[err?.data?.field] || \"UN error inexperado ocurrio!\"}</Text>\r\n            <Button onClick={onGoBack} style={{marginTop: 40}} label={\"Volver\"}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const SuccessMessagePage: React.FC<{ onGoBack: () => void }> = ({onGoBack}) => {\r\n    return (\r\n        <div style={{\r\n            display: \"flex\",\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            flexDirection: 'column',\r\n            height: '100%'\r\n        }}>\r\n            <Text variant={\"title\"}>Gracias!!! </Text>\r\n            <Button onClick={onGoBack} style={{marginTop: 40}} label={\"Volver\"}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport interface ClientFormPageProps {\r\n}\r\n\r\nexport const ClientFormPage: React.FC<ClientFormPageProps> = () => {\r\n    const {submitNewClient} = React.useContext(ClientsContext);\r\n    const [err, setError] = React.useState<APIError | null>(null)\r\n    const [isSuccess, setSuccess] = React.useState<boolean>(false)\r\n\r\n    const submitHandler = (data: NewClient) => {\r\n        submitNewClient(data)\r\n            .then(({error, data}) => {\r\n                if (error) {\r\n                    setError(error)\r\n                    return;\r\n                }\r\n                setSuccess(true)\r\n\r\n            })\r\n            .catch(console.warn)\r\n    }\r\n    return (\r\n        <ResponsiveBox\r\n            sizes={{desktopSize: 600}}\r\n            mobile={\r\n                <Card style={{width: '90%', height: '90%'}}>\r\n                    {!err && !isSuccess && <NewClientForm submitHandler={submitHandler}/>}\r\n                    {err && <ErrorMessagePage err={err} onGoBack={() => {\r\n                        setError(null);\r\n                    }}/>}\r\n                    {isSuccess && <SuccessMessagePage onGoBack={() => {\r\n                        setSuccess(false);\r\n                    }}/>}\r\n                </Card>\r\n\r\n            }\r\n            desktop={\r\n                <Card style={{width: '30%', height: '50%'}}>\r\n                    <Text variant={\"title\"}> Esta no es una app para ordenador!!</Text>\r\n                    <NewClientForm submitHandler={submitHandler}/>\r\n                </Card>\r\n            }\r\n\r\n        />\r\n    )\r\n}\r\n","import {NewClient} from \"../Features/Clients/context/models\";\r\nimport {Result} from \"../Common/types\";\r\nimport {configuration} from \"../index\";\r\n\r\nexport async function createClient(newClient: NewClient): Promise<Result<string>> {\r\n    try {\r\n        const raw = await fetch(`${configuration.apiURL}/clients`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(newClient)\r\n        });\r\n        if (raw.status >= 200 && raw.status < 500) {\r\n            return await raw.json();\r\n        }\r\n\r\n        return {error: {code: '', msg: 'Communication error', data: null}, data: null}\r\n\r\n    } catch (e) {\r\n        console.log(e)\r\n        return {data: null, error: {code: '', msg: 'Communication error', data: e}}\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {ClientsContextProvider} from \"./context/ClientContext\";\r\nimport {ClientFormPage} from \"./Pages/ClientForm\";\r\nimport {createClient} from \"../../API/clients.http\";\r\n\r\nexport interface ClientProps {\r\n}\r\n\r\nexport const Clients: React.FC<ClientProps> = () => {\r\n    return (\r\n        <ClientsContextProvider initialState={\r\n            {submitNewClient: createClient}\r\n        }>\r\n            <ClientFormPage></ClientFormPage>\r\n        </ClientsContextProvider>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport {Clients} from \"./Features/Clients\";\n\nfunction App() {\n    return (\n        <div className=\"App\" style={{alignItems: \"center\", justifyContent: 'center'}}>\n           <Clients />\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nexport const configuration = {\n    apiURL: 'https://rigolo-api.herokuapp.com'\n}\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}