{"version":3,"sources":["Features/Clients/context/ClientContext.tsx","UI/atoms/Card.tsx","UI/atoms/ResponsiveBox.tsx","hooks/window-size.hookt.tsx","UI/atoms/Icon.tsx","UI/atoms/Input.tsx","UI/molecules/DynamicForm.tsx","UI/atoms/Button.tsx","UI/organism/NewClientForm.tsx","UI/atoms/Text.tsx","Features/Clients/Pages/ClientForm.tsx","API/clients.http.tsx","Features/Clients/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["initialClientsState","submitNewClient","newClient","Error","ClientsContext","React","createContext","ClientsContextProvider","children","initialState","Provider","value","Card","style","backgroundColor","padding","borderRadius","boxShadow","ResponsiveBox","mobile","desktop","sizes","width","isSSR","window","useState","innerWidth","height","innerHeight","windowSize","setWindowSize","changeWindowSize","useEffect","addEventListener","removeEventListener","useWindowSize","desktopSize","iconsStyle","fontSize","color","marginRight","Icon","name","iconSize","src","process","inputStyle","display","background","border","outline","inputContainerStyle","margin","marginBottom","paddingLeft","position","alignItems","labelStyle","fontWeight","pointerEvents","transition","floatingLabel","top","left","paddingRight","Input","initialValue","type","placeholder","onValueChange","setValue","hasFocus","setFocus","inputRef","useRef","document","current","contains","activeElement","ref","onFocus","onBlur","onChange","ev","target","DynamicForm","fields","actionsTemplate","map","objKey","config","newValue","buttonStyle","justifyContent","cursor","Button","label","onClick","mergedStyles","newClientFields","NewClientForm","submitHandler","flexDirection","values","bottom","variantStyles","textAlign","Text","variant","ErrorMessagePage","err","onGoBack","msg","marginTop","SuccessMessagePage","ClientFormPage","useContext","setError","isSuccess","setSuccess","data","then","error","catch","console","warn","createClient","a","fetch","configuration","apiURL","method","body","JSON","stringify","raw","status","json","log","toString","Clients","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.25a95eca.chunk.js","sourcesContent":["import {NewClient} from \"./models\";\r\nimport {Result} from \"../../../Common/types\";\r\nimport React from \"react\";\r\n\r\nexport interface ClientContextActions {\r\n    submitNewClient: (newClient: NewClient) => Promise<Result<string>>;\r\n}\r\n\r\nexport interface ClientContextData {\r\n}\r\n\r\nexport interface ClientsContextState extends ClientContextActions {\r\n}\r\n\r\nexport const initialClientsState: ClientsContextState = {\r\n    submitNewClient: (newClient) => {\r\n        throw new Error(\"metodo sin implmentar\")\r\n    },\r\n};\r\n\r\nexport const ClientsContext = React.createContext<ClientsContextState>(initialClientsState);\r\n\r\nexport interface ClientContextProviderProps {\r\n    children?: React.ReactNode,\r\n    initialState?: ClientsContextState\r\n}\r\n\r\nexport const ClientsContextProvider: React.FC<ClientContextProviderProps> =\r\n    ({\r\n         children,\r\n         initialState = initialClientsState\r\n     }) => {\r\n\r\n        return (\r\n            <ClientsContext.Provider\r\n                value={initialState}\r\n            >\r\n                {children}\r\n            </ClientsContext.Provider>\r\n        );\r\n    };\r\n","import React from \"react\";\r\n\r\n\r\nexport interface CardProps {\r\n    style?: any;\r\n}\r\n\r\nexport const Card: React.FC<CardProps> = ({children,style}) => {\r\n    return (\r\n        <div style={{backgroundColor:\"#113d5e\", padding: 10, borderRadius: 1, boxShadow: '0px 2px 6px #00000029',...style}}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n","import {useWindowSize} from \"../../hooks/window-size.hookt\";\r\nimport React from \"react\";\r\n\r\nexport interface ResponsiveBoxProps {\r\n    sizes: {\r\n        desktopSize: number\r\n        mobileSize?: number;\r\n    }\r\n\r\n\r\n    mobile: React.ReactNode,\r\n    desktop: React.ReactNode,\r\n\r\n}\r\n\r\nexport const ResponsiveBox: React.FC<ResponsiveBoxProps> = ({children, mobile,desktop, sizes}) => {\r\n    const {width} = useWindowSize();\r\n    const {desktopSize} = sizes;\r\n    return (\r\n        <>\r\n            {width < desktopSize && mobile}\r\n            {width >= desktopSize && desktop}\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport function useWindowSize() {\r\n    const isSSR = typeof window === \"undefined\";\r\n\r\n    const [windowSize, setWindowSize] = React.useState({\r\n        width: !isSSR ? window.innerWidth : 1200,\r\n        height: !isSSR ? window.innerHeight : 800,\r\n    });\r\n\r\n    function changeWindowSize() {\r\n        setWindowSize({width: window.innerWidth, height: window.innerHeight});\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        window.addEventListener(\"resize\", changeWindowSize);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"resize\", changeWindowSize);\r\n        };\r\n    }, []);\r\n\r\n    return windowSize;\r\n}\r\n","import React from \"react\";\r\nimport {FaInstagram, FaWhatsapp} from \"react-icons/all\";\r\n\r\nexport interface IconProps {\r\n    name: 'brand' | 'instagram' | 'whatsapp'\r\n    iconSize?: 'large' | 'small' | 'medium'\r\n}\r\n\r\nconst iconsStyle = {\r\n    'large': {fontSize: 35, color: 'white', marginRight: 10},\r\n    'small': {fontSize: 35, color: 'white', marginRight: 10},\r\n    'medium': {fontSize: 35, color: 'white', marginRight: 10},\r\n}\r\n\r\nexport const Icon: React.FC<IconProps> =\r\n    ({\r\n         name,\r\n         iconSize = \"medium\"\r\n     }) => {\r\n        switch (name) {\r\n            case \"brand\":\r\n                return <img height={150} src={process.env.PUBLIC_URL + '/rigolo-icon.png'}/>\r\n            case 'instagram':\r\n                return <FaInstagram style={iconsStyle[iconSize]}/>\r\n            case 'whatsapp':\r\n                return <FaWhatsapp style={iconsStyle[iconSize]}/>\r\n        }\r\n    }\r\n","import React, {useEffect} from \"react\";\r\n\r\nconst inputStyle = {\r\n    fontSize: '14px',\r\n    display: 'block',\r\n    background: 'none',\r\n    width: '100%',\r\n    border: 'none',\r\n    height: '26px',\r\n    outline: 'none',\r\n    color: 'white'\r\n\r\n}\r\nconst inputContainerStyle: any = {\r\n    margin: 5,\r\n    marginBottom: 10,\r\n    paddingLeft: 7,\r\n    width: '100%',\r\n    position: 'relative',\r\n    display: 'flex',\r\n    height: '35px',\r\n    alignItems: 'center',\r\n    border: '1px solid rgba(255, 255, 255, .41)',\r\n    backgroundColor: 'none',\r\n    borderRadius: '4px',\r\n}\r\n\r\nconst labelStyle: any = {\r\n    color: 'white',\r\n    fontSize: 13,\r\n    fontWeight: 'bold',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    transition: '0.3s ease all',\r\n}\r\n\r\nconst floatingLabel: any = {\r\n    transition: '0.3s ease all',\r\n    position: 'absolute',\r\n    fontSize: 9,\r\n    fontWeight: 'bold',\r\n    top: -6,\r\n    color: 'white',\r\n    left: 10,\r\n    background: 'none',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n}\r\n\r\nexport interface InputProps {\r\n    type?: 'text';\r\n    placeholder?: string;\r\n    initialValue?: any;\r\n    onValueChange?: (value: any) => void\r\n}\r\n\r\nexport const Input: React.FC<InputProps> =\r\n    ({\r\n         initialValue,\r\n         type = 'text',\r\n         placeholder,\r\n         onValueChange\r\n     }) => {\r\n        const [value, setValue] = React.useState<any>(initialValue || \"\");\r\n        const [hasFocus, setFocus] = React.useState(false);\r\n        const inputRef = React.useRef<HTMLInputElement>(null);\r\n\r\n        const handleInputChange = (ev: any) => {\r\n            setValue(ev.target.value);\r\n            if (onValueChange) {\r\n                onValueChange(value);\r\n            }\r\n        }\r\n\r\n        useEffect(() => {\r\n            if (document.hasFocus() && inputRef?.current?.contains(document.activeElement)) {\r\n                setFocus(true);\r\n            }\r\n        }, []);\r\n\r\n        return (\r\n            <div style={inputContainerStyle}>\r\n                <input ref={inputRef}\r\n                       onFocus={() => setFocus(true)}\r\n                       onBlur={() => setFocus(false)}\r\n                       style={inputStyle} onChange={handleInputChange} value={value} type={type}/>\r\n                <label style={(!(value)) && !hasFocus ? labelStyle : floatingLabel}>{placeholder}</label>\r\n            </div>\r\n        )\r\n\r\n    }\r\n","import React, {useState} from \"react\";\r\nimport {Input, InputProps} from \"../atoms/Input\";\r\n\r\n\r\ntype RenderInputFunc = (config: { objKey: string, config: InputProps }) => React.ReactNode;\r\ntype FieldValidatorFunc = (value: string) => { valid: boolean, message?: string };\r\n\r\nexport interface DynamicFormProps {\r\n    fields: { objKey: string, config: InputProps, validators?: FieldValidatorFunc[] }[]\r\n    initialValue?: any\r\n    actionsTemplate?: (values: any) => React.ReactNode\r\n}\r\n\r\nexport const DynamicForm: React.FC<DynamicFormProps> = (\r\n    {\r\n        fields,\r\n        initialValue,\r\n        actionsTemplate\r\n    }) => {\r\n\r\n    const [value, setValue] = useState<any>(initialValue || {});\r\n\r\n\r\n    const renderField: RenderInputFunc = ({objKey, config}) => {\r\n        return (\r\n            <Input\r\n                key={objKey}\r\n                onValueChange={(newValue) => {\r\n                    value[objKey] = newValue\r\n                    setValue({...value});\r\n                }}\r\n                placeholder={config.placeholder}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {fields.map(renderField)}\r\n            <div style={{width:'100%'}}>\r\n                {actionsTemplate ? actionsTemplate(value) : null}\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nconst buttonStyle: any = {\r\n    padding: '0px 15px 0px 15px',\r\n    height: 32,\r\n    width: '100%',\r\n    border: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    fontWeight: 'inherit',\r\n    fontSize: 'inherit',\r\n    justifyContent: 'center',\r\n    cursor: 'pointer',\r\n    background: '#fbaa2c',\r\n    color: 'white',\r\n}\r\n\r\nexport interface ButtonProps {\r\n    label: string\r\n    onClick?: () => void\r\n    style?: any\r\n}\r\n\r\nexport const Button: React.FC<ButtonProps> = ({label, style, onClick}) => {\r\n    const handleClick = () => {\r\n        if (onClick) {\r\n            onClick();\r\n        }\r\n    }\r\n    const mergedStyles = {...buttonStyle, ...style}\r\n    return (\r\n        <button style={mergedStyles} onClick={handleClick}>{label}</button>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {Icon} from \"../atoms/Icon\";\r\nimport {DynamicForm} from \"../molecules/DynamicForm\";\r\nimport {Button} from \"../atoms/Button\";\r\nimport {InputProps} from \"../atoms/Input\";\r\nimport {NewClient} from \"../../Features/Clients/context/models\";\r\n\r\n\r\nconst newClientFields: { objKey: string, config: InputProps }[] = [\r\n    {objKey: 'name', config: {placeholder: 'Nombre'}},\r\n    {objKey: 'phone', config: {placeholder: 'Telefono'}},\r\n    {objKey: 'region', config: {placeholder: 'Region'}},\r\n    {objKey: 'Email', config: {placeholder: 'Email'}},\r\n]\r\n\r\nexport interface NewClientFormProps {\r\n    submitHandler: (newClientData: NewClient) => void\r\n}\r\n\r\nexport const NewClientForm: React.FC<NewClientFormProps> = ({submitHandler}) => {\r\n    return (<div style={{\r\n        display: 'flex', flexDirection: 'column', alignItems: 'center',\r\n        position: 'relative', height: '100%'\r\n    }}>\r\n        <Icon name={'brand'}/>\r\n        <div style={{height:30}}></div>\r\n        <DynamicForm\r\n\r\n            fields={newClientFields}\r\n            actionsTemplate={(values: any) => (\r\n                <Button\r\n                    style={{position: 'absolute', bottom: 30}}\r\n                    onClick={\r\n                        () => {\r\n                            submitHandler(values as NewClient);\r\n                        }\r\n                    } label={'Enviar'}/>\r\n            )}\r\n        />\r\n\r\n    </div>)\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nexport interface TextProps {\r\n    variant: 'paragraph' | 'title',\r\n\r\n}\r\n\r\nconst variantStyles: any = {\r\n    'paragraph': {fontSize: 16},\r\n    'title': {fontSize: 25, fontWeight: 'bold',textAlign:'center'},\r\n}\r\n\r\n\r\nexport const Text: React.FC<TextProps> = ({variant, children}) => {\r\n\r\n    const mergedStyles = {color: \"white\", ...variantStyles[variant]}\r\n    return (\r\n        <span style={mergedStyles}>{children}</span>\r\n    )\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport {ClientsContext} from \"../context/ClientContext\";\r\nimport {Card} from \"../../../UI/atoms/Card\";\r\nimport {ResponsiveBox} from \"../../../UI/atoms/ResponsiveBox\";\r\nimport {NewClientForm} from \"../../../UI/organism/NewClientForm\";\r\nimport {NewClient} from \"../context/models\";\r\nimport {Text} from \"../../../UI/atoms/Text\";\r\nimport {Button} from \"../../../UI/atoms/Button\";\r\n\r\n\r\nexport const ErrorMessagePage: React.FC<{ err: any, onGoBack: () => void }> = ({err, onGoBack}) => {\r\n    return (\r\n        <div style={{\r\n            display: \"flex\",\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            flexDirection: 'column',\r\n            height: '100%'\r\n        }}>\r\n            <Text variant={\"title\"}> {err?.msg}</Text>\r\n            <Button onClick={onGoBack} style={{marginTop: 40}} label={\"Volver\"}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const SuccessMessagePage: React.FC<{  onGoBack: () => void }> = ({ onGoBack}) => {\r\n    return (\r\n        <div style={{\r\n            display: \"flex\",\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            flexDirection: 'column',\r\n            height: '100%'\r\n        }}>\r\n            <Text variant={\"title\"}>Gracias!!! </Text>\r\n            <Button onClick={onGoBack} style={{marginTop: 40}} label={\"Volver\"}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport interface ClientFormPageProps {\r\n}\r\n\r\nexport const ClientFormPage: React.FC<ClientFormPageProps> = () => {\r\n    const {submitNewClient} = React.useContext(ClientsContext);\r\n    const [err, setError] = React.useState<any | null>(null)\r\n    const [isSuccess, setSuccess] = React.useState<boolean>(false)\r\n\r\n    const submitHandler = (data: NewClient) => {\r\n        submitNewClient(data)\r\n            .then(({error, data}) => {\r\n                if (error) {\r\n                    setError(error)\r\n                    return;\r\n                }\r\n                setSuccess(true)\r\n\r\n            })\r\n            .catch(console.warn)\r\n    }\r\n    return (\r\n        <ResponsiveBox\r\n            sizes={{desktopSize: 600}}\r\n            mobile={\r\n                <Card style={{width: '90%', height: '90%'}}>\r\n                    {!err && !isSuccess && <NewClientForm submitHandler={submitHandler}/>}\r\n                    {err && <ErrorMessagePage err={err} onGoBack={() => {\r\n                        setError(null);\r\n                    }}/>}\r\n                    {isSuccess && <SuccessMessagePage  onGoBack={() => {\r\n                        setSuccess(false);\r\n                    }}/>}\r\n                </Card>\r\n\r\n            }\r\n            desktop={\r\n                <Card style={{width: '30%', height: '50%'}}>\r\n                    <NewClientForm submitHandler={submitHandler}/>\r\n                </Card>\r\n            }\r\n\r\n        />\r\n    )\r\n}\r\n","import {NewClient} from \"../Features/Clients/context/models\";\r\nimport {Result} from \"../Common/types\";\r\nimport {configuration} from \"../index\";\r\n\r\nexport async function createClient(newClient: NewClient): Promise<Result<string>> {\r\n    try {\r\n        const raw = await fetch(`${configuration.apiURL}/clients`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(newClient)\r\n        });\r\n        if (raw.status >= 200 && raw.status < 500) {\r\n            return await raw.json();\r\n        }\r\n\r\n        return {error: new Error(\"api communication error\"), data: null}\r\n\r\n    } catch (e) {\r\n        console.log(e)\r\n        return {data: null, error: e.toString()}\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {ClientsContextProvider} from \"./context/ClientContext\";\r\nimport {ClientFormPage} from \"./Pages/ClientForm\";\r\nimport {createClient} from \"../../API/clients.http\";\r\n\r\nexport interface ClientProps {\r\n}\r\n\r\nexport const Clients: React.FC<ClientProps> = () => {\r\n    return (\r\n        <ClientsContextProvider initialState={\r\n            {submitNewClient: createClient}\r\n        }>\r\n            <ClientFormPage></ClientFormPage>\r\n        </ClientsContextProvider>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport {Clients} from \"./Features/Clients\";\n\nfunction App() {\n    return (\n        <div className=\"App\" style={{alignItems: \"center\", justifyContent: 'center'}}>\n           <Clients />\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nexport const configuration = {\n    apiURL: 'https://rigolo-api.herokuapp.com'\n}\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}