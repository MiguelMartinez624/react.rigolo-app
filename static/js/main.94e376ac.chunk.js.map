{"version":3,"sources":["Features/Clients/context/ClientContext.tsx","UI/atoms/Input.tsx","UI/molecules/DynamicForm.tsx","UI/atoms/Button.tsx","UI/atoms/Icon.tsx","UI/atoms/Card.tsx","hooks/window-size.hookt.tsx","UI/atoms/ResponsiveBox.tsx","Features/Clients/Pages/ClientForm.tsx","Features/Clients/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["initialClientsState","submitNewClient","newClient","Error","ClientsContext","React","createContext","ClientsContextProvider","children","initialState","Provider","value","inputStyle","fontSize","display","background","width","border","height","outline","inputContainerStyle","margin","marginBottom","paddingLeft","position","alignItems","backgroundColor","borderRadius","labelStyle","color","fontWeight","pointerEvents","transition","floatingLabel","top","left","paddingRight","Input","initialValue","type","placeholder","onValueChange","useState","setValue","style","onChange","ev","target","DynamicForm","fields","map","objKey","config","newValue","buttonStyle","padding","justifyContent","cursor","Button","label","onClick","mergedStyles","Icon","Card","boxShadow","useWindowSize","isSSR","window","innerWidth","innerHeight","windowSize","setWindowSize","changeWindowSize","useEffect","addEventListener","removeEventListener","ResponsiveBox","mobile","desktop","sizes","desktopSize","mobileSize","newClientFields","ClientFormPage","useContext","submitHandler","name","phone","region","then","console","log","catch","warn","flexDirection","bottom","Clients","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94e376ac.chunk.js","sourcesContent":["import {NewClient} from \"./models\";\r\nimport {Result} from \"../../../Common/types\";\r\nimport React from \"react\";\r\n\r\nexport interface ClientContextActions {\r\n    submitNewClient: (newClient: NewClient) => Promise<Result<boolean>>;\r\n}\r\n\r\nexport interface ClientContextData {\r\n}\r\n\r\nexport interface ClientsContextState extends ClientContextActions {\r\n}\r\n\r\nexport const initialClientsState: ClientsContextState = {\r\n    submitNewClient: (newClient) => {\r\n        throw new Error(\"metodo sin implmentar\")\r\n    },\r\n};\r\n\r\nexport const ClientsContext = React.createContext<ClientsContextState>(initialClientsState);\r\n\r\nexport interface ClientContextProviderProps {\r\n    children?: React.ReactNode,\r\n    initialState?: ClientsContextState\r\n}\r\n\r\nexport const ClientsContextProvider: React.FC<ClientContextProviderProps> =\r\n    ({\r\n         children,\r\n         initialState = initialClientsState\r\n     }) => {\r\n\r\n        return (\r\n            <ClientsContext.Provider\r\n                value={initialState}\r\n            >\r\n                {children}\r\n            </ClientsContext.Provider>\r\n        );\r\n    };\r\n","import React from \"react\";\r\n\r\nconst inputStyle = {\r\n    fontSize: '14px',\r\n    display: 'block',\r\n    background: 'none',\r\n    width: '100%',\r\n    border: 'none',\r\n    height: '26px',\r\n    outline: 'none',\r\n\r\n}\r\nconst inputContainerStyle: any = {\r\n    margin: 5,\r\n    marginBottom: 10,\r\n    paddingLeft: 7,\r\n    width: '100%',\r\n    position: 'relative',\r\n    display: 'flex',\r\n    height: '35px',\r\n    alignItems: 'center',\r\n    border: '1px solid rgba(255, 255, 255, .41)',\r\n    backgroundColor: 'none',\r\n    borderRadius: '4px',\r\n}\r\n\r\nconst labelStyle: any = {\r\n    color: 'white',\r\n    fontSize: 13,\r\n    fontWeight: 'bold',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    transition: '0.3s ease all',\r\n}\r\n\r\nconst floatingLabel: any = {\r\n    transition: '0.3s ease all',\r\n    position: 'absolute',\r\n    fontSize: 9,\r\n    fontWeight: 'bold',\r\n    top: -6,\r\n    color: 'white',\r\n    left: 10,\r\n    background: 'none',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n}\r\n\r\nexport interface InputProps {\r\n    type?: 'text';\r\n    placeholder?: string;\r\n    initialValue?: any;\r\n    onValueChange?: (value: any) => void\r\n}\r\n\r\nexport const Input: React.FC<InputProps> =\r\n    ({\r\n         initialValue,\r\n         type = 'text',\r\n         placeholder,\r\n         onValueChange\r\n     }) => {\r\n        const [value, setValue] = React.useState<any>(initialValue || \"\");\r\n        const handleInputChange = (ev: any) => {\r\n            setValue(ev.target.value);\r\n            if (onValueChange) {\r\n                onValueChange(value);\r\n            }\r\n        }\r\n        return (\r\n            <div style={inputContainerStyle}>\r\n                <input style={inputStyle} onChange={handleInputChange} value={value} type={type}/>\r\n                <label style={!(value) ? labelStyle : floatingLabel}>{placeholder}</label>\r\n            </div>\r\n        )\r\n\r\n    }\r\n","import React, {useState} from \"react\";\r\nimport {Input, InputProps} from \"../atoms/Input\";\r\n\r\n\r\ntype RenderInputFunc = (config: { objKey: string, config: InputProps }) => React.ReactNode;\r\ntype FieldValidatorFunc = (value: string) => { valid: boolean, message?: string };\r\nexport interface DynamicFormProps {\r\n    fields: { objKey: string, config: InputProps, validators?: FieldValidatorFunc[] }[]\r\n    initialValue?: any\r\n}\r\n\r\nexport const DynamicForm: React.FC<DynamicFormProps> = ({fields, initialValue}) => {\r\n\r\n    const [value, setValue] = useState<any>(initialValue || {});\r\n\r\n\r\n    const renderField: RenderInputFunc = ({objKey, config}) => {\r\n        return (\r\n            <Input\r\n                key={objKey}\r\n                onValueChange={(newValue) => {\r\n                    value[objKey] = newValue\r\n                    setValue({...value});\r\n                }}\r\n                placeholder={config.placeholder}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {fields.map(renderField)}\r\n        </>\r\n    )\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nconst buttonStyle: any = {\r\n    padding: '0px 15px 0px 15px',\r\n    height: 32,\r\n    width: '100%',\r\n    border: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    fontWeight: 'inherit',\r\n    fontSize: 'inherit',\r\n    justifyContent: 'center',\r\n    cursor: 'pointer',\r\n    background: 'blue',\r\n    color: 'white',\r\n}\r\n\r\nexport interface ButtonProps {\r\n    label: string\r\n    onClick?: () => void\r\n    style?: any\r\n}\r\n\r\nexport const Button: React.FC<ButtonProps> = ({label, style, onClick}) => {\r\n    const handleClick = () => {\r\n        if (onClick) {\r\n            onClick();\r\n        }\r\n    }\r\n    const mergedStyles = {...buttonStyle, ...style}\r\n    return (\r\n        <button style={mergedStyles} onClick={handleClick}>{label}</button>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport interface IconProps {\r\n}\r\n\r\nexport const Icon: React.FC<IconProps> = ({}) => {\r\n    return (\r\n        <>\r\n            RIGOLO papa\r\n        </>)\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nexport interface CardProps {\r\n    style?: any;\r\n}\r\n\r\nexport const Card: React.FC<CardProps> = ({children,style}) => {\r\n    return (\r\n        <div style={{backgroundColor:\"orange\", padding: 10, borderRadius: 1, boxShadow: '0px 2px 6px #00000029',...style}}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport function useWindowSize() {\r\n    const isSSR = typeof window === \"undefined\";\r\n\r\n    const [windowSize, setWindowSize] = React.useState({\r\n        width: !isSSR ? window.innerWidth : 1200,\r\n        height: !isSSR ? window.innerHeight : 800,\r\n    });\r\n\r\n    function changeWindowSize() {\r\n        setWindowSize({width: window.innerWidth, height: window.innerHeight});\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        window.addEventListener(\"resize\", changeWindowSize);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"resize\", changeWindowSize);\r\n        };\r\n    }, []);\r\n\r\n    return windowSize;\r\n}\r\n","import {useWindowSize} from \"../../hooks/window-size.hookt\";\r\nimport React from \"react\";\r\n\r\nexport interface ResponsiveBoxProps {\r\n    sizes: {\r\n        desktopSize: number\r\n        mobileSize: number;\r\n    }\r\n\r\n\r\n    mobile: React.ReactNode,\r\n    desktop: React.ReactNode,\r\n\r\n}\r\n\r\nexport const ResponsiveBox: React.FC<ResponsiveBoxProps> = ({children, mobile,desktop, sizes}) => {\r\n    const {width} = useWindowSize();\r\n    const {mobileSize, desktopSize} = sizes;\r\n    return (\r\n        <>\r\n            {width < desktopSize && mobile}\r\n            {width >= desktopSize && desktop}\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nimport {ClientsContext} from \"../context/ClientContext\";\r\nimport {InputProps} from \"../../../UI/atoms/Input\";\r\nimport {DynamicForm} from \"../../../UI/molecules/DynamicForm\";\r\nimport {Button} from \"../../../UI/atoms/Button\";\r\nimport {Icon} from \"../../../UI/atoms/Icon\";\r\nimport {Card} from \"../../../UI/atoms/Card\";\r\nimport {useWindowSize} from \"../../../hooks/window-size.hookt\";\r\nimport {ResponsiveBox} from \"../../../UI/atoms/ResponsiveBox\";\r\n\r\n\r\nconst newClientFields: { objKey: string, config: InputProps }[] = [\r\n    {objKey: 'name', config: {placeholder: 'Nombre'}},\r\n    {objKey: 'phone', config: {placeholder: 'Telefono'}},\r\n    {objKey: 'region', config: {placeholder: 'Region'}},\r\n    {objKey: 'Email', config: {placeholder: 'Email'}},\r\n]\r\n\r\nexport interface ClientFormPageProps {\r\n}\r\n\r\nexport const ClientFormPage: React.FC<ClientFormPageProps> = () => {\r\n    const {submitNewClient} = React.useContext(ClientsContext);\r\n    const {width} = useWindowSize();\r\n\r\n    const submitHandler = () => {\r\n        submitNewClient({name: \"hola\", phone: \"lol\", region: \";olaosd\"})\r\n            .then(console.log)\r\n            .catch(console.warn)\r\n    }\r\n    return (\r\n        <ResponsiveBox\r\n            sizes={{desktopSize: 600, mobileSize: 300}}\r\n            mobile={\r\n                <Card style={{width: '90%', height: '90%'}}>\r\n                    <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center',\r\n                        position: 'relative',height:'100%'}}>\r\n                        <Icon/>\r\n                        <DynamicForm fields={newClientFields}/>\r\n                        <Button style={{position: 'absolute', bottom: 30}} onClick={submitHandler} label={'Enviar'}/>\r\n                    </div>\r\n                </Card>\r\n\r\n            }\r\n            desktop={\r\n                <Card style={{width: '30%', height: '50%'}}>\r\n                    <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center',\r\n                        position: 'relative',height:'100%'}}>\r\n                        <Icon/>\r\n                        <DynamicForm fields={newClientFields}/>\r\n                        <Button style={{position: 'absolute', bottom: 30}} onClick={submitHandler} label={'Enviar'}/>\r\n                    </div>\r\n                </Card>\r\n            }\r\n\r\n        />\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {ClientsContextProvider} from \"./context/ClientContext\";\r\nimport {ClientFormPage} from \"./Pages/ClientForm\";\r\n\r\nexport interface ClientProps {\r\n}\r\n\r\nexport const Clients: React.FC<ClientProps> = () => {\r\n    return (\r\n        <ClientsContextProvider>\r\n            <ClientFormPage></ClientFormPage>\r\n        </ClientsContextProvider>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport {Clients} from \"./Features/Clients\";\n\nfunction App() {\n    return (\n        <div className=\"App\" style={{alignItems: \"center\", justifyContent: 'center'}}>\n           <Clients />\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}